{"componentChunkName":"component---src-templates-blog-post-jsx","path":"/rus/voprosi_ot_otvetov_na_kotorie_vam_ne_stanet_luchshe/","result":{"data":{"site":{"siteMetadata":{"title":"Roman's Blog","url":"https://cdroma.me/"}},"markdownRemark":{"html":"<p>Эту заметку я создал для того, чтобы записывать в неё вопросы, которые мне (или не мне) задавали на собеседовании (или не собеседовании) по JS.</p>\n<p>Тут вы не найдете ответов на эти вопросы (или немного найдете), только вопросы.</p>\n<p>И когда вы найдёте ответы на эти вопросы где-то ещё, то вам не станет от этого лучше. Это просто вопросы, ответы на которые кто-то кому-то задает.</p>\n<hr>\n<h2>React JS / Native</h2>\n<hr>\n<ul>\n<li>Жизненный цикл компонента? В какой метод какие аргументы приходят? Где и как лучше обновлять стейт?</li>\n<li>Что такое функциональный компонент и PureComponent? В чём разница?</li>\n<li>Что такое Redux?</li>\n<li>Что такое сайд-эффекты?</li>\n<li>Какие бывают миддлвары в Redux?</li>\n<li>Для чего нужен redux-thunk?</li>\n<li>На чём построена redux-saga (на генераторах) и для чего она нужна?</li>\n<li>React Router и redux-router. Что? Зачем? Почему?</li>\n<li>Для чего нужен второй аргумент в функции setState?</li>\n<li>С какой версии React пользуешься и какие крупные изменения за это время произошли?</li>\n<li>Какие ломающие изменения произошли в 16 версии?</li>\n<li>Что такое Context API и какие в нём произошли изменения?</li>\n<li>Что такое Flux-архитектура и в чём её отличия с реализацией Redux?</li>\n<li>React и Vue - что лучше и для каких задач?</li>\n<li>Redux и MobX - что лучше и для каких задач? Какие ещё есть библиотеки для управления стейта приложения?</li>\n<li>Server-Side Rendering?</li>\n<li>Что такое Higher-Ordered Component?</li>\n<li>Что такое React Native? Зачем оно? В чём отличия от обычного React? (да, именно так мне его и задали)</li>\n<li>Как отрендерить компонент в указанное время?</li>\n</ul>\n<h2>Java Script</h2>\n<hr>\n<ul>\n<li>Так что же наконец такое, это <em>замыкание</em>!?</li>\n<li>Как работает Event Loop? Таски, микротаски, очереди, etc.?</li>\n<li>Что такое garbage collector в js и как он работает? (нет ссылок - нет объекта, есть ссылка - есть страдание)</li>\n<li>Что такое делегирование? (когда вешаем обработчик на контейнер и проверяем клик по элементу внутри - ага, всё ещё спрашивают)</li>\n<li>Что такое LocalStorage и в чём его отличия от Cookie? Как защитить запись в куке, чтобы её не смог прочитать js (флаг HttpOnly)?</li>\n<li>Что такое WebSocket? Что такое long-polling и в чём их разница? Какие проблемы они решают?</li>\n<li>ServiceWorker / WebWorker / SharedWorker? Что это? Зачем это? Как это?</li>\n<li>event.preventDefault() и event.stopPropagation() - зачем и когда?</li>\n<li>Что интересного в новых proposal и чего ждёшь больше всего?</li>\n<li>Что такое higher-ordered function? (однажды мне задали дополнительный вопрос - \"можно ли в неё передать функцию?\" и это был очень странный вопрос!)</li>\n<li>Что такое Promise? Как отлаживать ошибки?</li>\n<li>Что такое Async/Await и во что его компилят транспиллеры? И как их отлаживать?</li>\n<li>Что такое генераторы?</li>\n<li>Что такое Proxy?</li>\n<li>TypeScript / Flow? Что это и зачем это?</li>\n<li>Что такое optimistic rendering? Как бы реализовал?</li>\n<li>Что такое virtual scroll? Как оно работает?</li>\n<li>Что такое node.js?</li>\n<li>Что такое d3? Для чего она нужна?</li>\n<li>Как работают генераторы?</li>\n<li>Напиши генератор, который реализует последовательность Фибоначи (лайв кодинг не моё вообще, после собеса подумал и <a href=\"https://gist.github.com/gthrm/7274dc2bf8149944f8360325a6673642\">написал</a>)</li>\n</ul>\n<h2>DOM</h2>\n<ul>\n<li>DOM Events: 3 фазы прохода события (\nФаза погружения (capturing phase) – событие сначала идёт сверху вниз.\nФаза цели (target phase) – событие достигло целевого(исходного) элемента.\nФаза всплытия (bubbling stage) – событие начинает всплывать.</li>\n</ul>\n<p>).</p>\n<ul>\n<li>Как предотвратить всплытие? (event.stopPropagation(), event.stopImmediatePropagation())</li>\n</ul>\n<h2>CSS</h2>\n<hr>\n<ul>\n<li>Если дело вообще касается css, то почему-то всё ещё спрашивают про способы \"оцентровать блок по центру экрана\". В 2к18!</li>\n<li>Препроцессоры и их плюсы/минусы относительно друг друга (это обычно вопрос про опыт и почему-то про postcss так никто и не спросил)?</li>\n<li>css-modules / styled-components. Что это? Зачем это? Плюсы-минусы?</li>\n<li>Какие бывают значения display и есть ли элементы, которые по-умолчанию inline-block (img)?</li>\n<li>Чем отличается opacity: 0 от opacity: 0.00001?</li>\n<li>Чем отличается visibility: hidden от display: none?</li>\n<li><a href=\"https://webref.ru/course/float/clearfix\">Что такое float? Как обнулить? Из чего состоит .clearfix</a>?</li>\n<li>В чём разница box-sizing: content-box от border-box?</li>\n<li>Через какие директивы реализуется респонзив?</li>\n<li>Какого цвета будет текст если ...</li>\n</ul>\n<h2>Other Браузер</h2>\n<hr>\n<ul>\n<li>Что такое SVG? Какие есть способы вставить SVG на страницу? SVG-анимации?</li>\n<li>Что такое canvas и почему он такой быстрый?</li>\n<li>Какие бывают способы оптимизации приложения? (спрайты, минификация, лейзи-лоад, etc.)</li>\n<li>Сколько запросов одновременно можно отправить из браузера на определённый домен? Как решают проблему с ограничением? Решает ли её http/2?</li>\n</ul>\n<h2>Other программирование</h2>\n<hr>\n<ul>\n<li>Какие бывают паттерны? Перечисли какие знаешь и поясни коротко? (обычно говорят про медиатор, фабрику и декоратор)</li>\n<li>Какие паттерны проектирования знаешь и в чём особенности? (например MVC и MVVM)</li>\n<li>Что такое чистая функция (pure function)?</li>\n<li>Какие языки программирования бывают (функциональные/императивные)? В чём суть этих парадигм? К какой парадигме относится JS?</li>\n<li>Чем компилируемые языки отличаются от интерпретируемых? Какие есть интерпретируемые языки? Где интерпретируется их код?</li>\n<li>Что такое Rx?</li>\n<li>Что такое REST и в чём его отличие от RPC? CRUD?</li>\n<li>Чем отличается GET от POST? Какие ещё виды запросов есть и для чего используются?</li>\n<li>На каком уровне OSI находятся http / tcp / ping / json / витая пара?</li>\n<li>Что происходит после запроса из браузера на открытие какой-то страницы?</li>\n<li>S.O.L.I.D.?</li>\n<li>Что такое JSON? Что такое XML? Продолжи список (мне вспомнился только YAML)? Можно ли сконвертировать XML в JSON?</li>\n<li>Что такое protobuf и messagepack? В чём отличие?</li>\n<li>Что такое микросервисы? Зачем они? Какие проблемы решает микросервисная архитектура?</li>\n<li>Что такое мутабельность и иммутабельность?</li>\n</ul>\n<p>После этого всего в голове остаётся один самый важный вопрос: стал ли я счастливее, узнав ответы на все эти вопросы?</p>\n<p><img src=\"https://cloud.cdroma.ru/upload/18abc9fb-dbdb-4161-a48c-48789b974458-1700955531715.jpeg\" alt=\"alt text\" title=\"Logo Title Text 1\"></p>","frontmatter":{"title":"Вопросы, от ответов на которые вам не станет лучше","description":"Эта захватывающая статья собирает серию сложных и заставляющих задуматься вопросов из различных собеседований по JavaScript, охватывая темы от React JS/Native до CSS и DOM. Статья не обязательно предоставляет ответы, но представляет эти вопросы для размышления о глубине и сложности JavaScript и веб-разработки.","keywords":"вопросы на собеседовании по JavaScript, React JS, React Native, Redux, вопросы программирования, веб-разработка, объекты JS, DOM, CSS, сложности JavaScript, интервью для программистов, инженерия программного обеспечения, разработка интерфейсов, серверная разработка, жизненный цикл React, промежуточное программное обеспечение Redux, веб-технологии, концепции программирования, сложности программирования, проблемы кодирования, интервью с разработчиками, веб-программирование, знания кодирования, тонкости JavaScript"}}},"pageContext":{"slug":"/rus/voprosi_ot_otvetov_na_kotorie_vam_ne_stanet_luchshe/"}},"staticQueryHashes":["1777174035","3159585216"],"slicesMap":{}}