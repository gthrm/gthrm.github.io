{"version":3,"file":"component---src-pages-coffee-index-jsx-7bd020bfbb0dc3296a4c.js","mappings":"0MAOA,MAAMA,EAAU,CAAAC,KAAA,SAAAC,OAAA,sCAKVC,GAAmBC,EAAAA,EAAAA,IAAG,cACbC,EAAAA,EAAAA,GAAO,GAAE,mBACLA,EAAAA,EAAAA,GAAO,IAAI,yCAGbA,EAAAA,EAAAA,GAAO,IAAI,SAItBC,EAAoB,CAAAL,KAAA,SAAAC,OAAA,cAIpBK,EAAgB,CAAAN,KAAA,SAAAC,OAAA,6BAKhBM,GAAeJ,EAAAA,EAAAA,IAAG,sEAKPC,EAAAA,EAAAA,GAAO,GAAE,SAIpBI,EAAa,CAAAR,KAAA,SAAAC,OAAA,YAIbQ,GAAsBN,EAAAA,EAAAA,IAAG,mGAKZC,EAAAA,EAAAA,GAAO,GAAE,QAGb,SAASM,EAAUC,GAAY,IAAX,KAAEC,GAAMD,EACzC,OACEE,EAAAA,EAAAA,GAACC,EAAAA,EAAM,MACLD,EAAAA,EAAAA,GAAA,aACEA,EAAAA,EAAAA,GAAA,OAAKV,IAAKM,IACRI,EAAAA,EAAAA,GAAA,YACEA,EAAAA,EAAAA,GAAA,MAAIV,IAAKI,IACPM,EAAAA,EAAAA,GAAA,QAAM,aAAW,SAASE,KAAK,OAAM,MAGpC,IAAI,iBAEJ,KACDF,EAAAA,EAAAA,GAAA,QAAM,aAAW,SAASE,KAAK,OAAM,QAKvCF,EAAAA,EAAAA,GAAA,MAAIV,IAAKK,GACN,GAAGI,EAAKI,kBAAkBC,sBAKhCL,EAAKI,kBAAkBE,MAAMC,KAAIC,IAAA,IAAC,KAAEC,GAAMD,EAAA,OACzCP,EAAAA,EAAAA,GAAA,OAAKS,IAAKD,EAAKE,KACbV,EAAAA,EAAAA,GAACW,EAAAA,KAAI,CAACC,GAAIJ,EAAKK,OAAOC,KAAMxB,IAAKJ,IAC/Bc,EAAAA,EAAAA,GAAA,MAAIV,IAAKD,GACNmB,EAAKO,YAAYC,MACjB,KACDhB,EAAAA,EAAAA,GAAA,QAAMV,IAAKE,GAAsB,IAE9B,IACAgB,EAAKO,YAAYE,QAGtBjB,EAAAA,EAAAA,GAAA,SAAIQ,EAAKU,UACTlB,EAAAA,EAAAA,GAAA,KAAGV,IAAKG,GACL,iBAAiBe,EAAKW,qBAGvB,KAKhB,C","sources":["webpack://cdroma.me/./src/pages/coffee/index.jsx"],"sourcesContent":["import React from 'react';\nimport { css } from '@emotion/react';\nimport { graphql, Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport Layout from '../../components/layout';\nimport { rhythm } from '../../utils/typography';\n\nconst styledLink = css`\n  text-decoration: none;\n  color: inherit;\n`;\n\nconst styledLinkHeader = css`\n  font-size: ${rhythm(1)};\n  margin-bottom: ${rhythm(0.5)};\n\n  @media (max-width: 420px) {\n    font-size: ${rhythm(0.8)};\n  }\n`;\n\nconst styledLinkHeaderDate = css`\n  color: #bbb;\n`;\n\nconst styledTimeToRead = css`\n  color: #bbb;\n  font-size: 13px;\n`;\n\nconst styledHeader = css`\n  display: inline-block;\n  margin: 0;\n\n  @media (max-width: 420px) {\n    font-size: ${rhythm(1)};\n  }\n`;\n\nconst styledCounter = css`\n  margin: 0;\n`;\n\nconst styledHeaderWrapper = css`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${rhythm(1)};\n`;\n\nexport default function CoffeePage({ data }) {\n  return (\n    <Layout>\n      <main>\n        <div css={styledHeaderWrapper}>\n          <div>\n            <h1 css={styledHeader}>\n              <span aria-label=\"Coffee\" role=\"img\">\n                ☕️\n              </span>\n              {' '}\n              My Coffee Blog\n              {' '}\n              <span aria-label=\"Coffee\" role=\"img\">\n                ☕️\n              </span>\n\n            </h1>\n            <h4 css={styledCounter}>\n              {`${data.allMarkdownRemark.totalCount} Notes`}\n            </h4>\n          </div>\n        </div>\n\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <div key={node.id}>\n            <Link to={node.fields.slug} css={styledLink}>\n              <h3 css={styledLinkHeader}>\n                {node.frontmatter.title}\n                {' '}\n                <span css={styledLinkHeaderDate}>\n                  —\n                  {' '}\n                  {node.frontmatter.date}\n                </span>\n              </h3>\n              <p>{node.excerpt}</p>\n              <p css={styledTimeToRead}>\n                {`Time to read: ${node.timeToRead}  min.`}\n              </p>\n            </Link>\n          </div>\n        ))}\n      </main>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { frontmatter: { type: { eq: \"coffee\" }, lang: { eq: \"eng\" } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            type\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n\nCoffeePage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n              type: PropTypes.string,\n            }).isRequired,\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }).isRequired,\n            excerpt: PropTypes.string.isRequired,\n            timeToRead: PropTypes.number.isRequired,\n          }).isRequired,\n        }).isRequired,\n      ).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n"],"names":["styledLink","name","styles","styledLinkHeader","css","rhythm","styledLinkHeaderDate","styledTimeToRead","styledHeader","styledCounter","styledHeaderWrapper","CoffeePage","_ref","data","___EmotionJSX","Layout","role","allMarkdownRemark","totalCount","edges","map","_ref2","node","key","id","Link","to","fields","slug","frontmatter","title","date","excerpt","timeToRead"],"sourceRoot":""}