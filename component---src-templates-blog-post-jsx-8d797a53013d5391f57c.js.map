{"version":3,"file":"component---src-templates-blog-post-jsx-8d797a53013d5391f57c.js","mappings":"gMAOA,MAAMA,EAAe,CAAAC,KAAA,SAAAC,OAAA,sBAIN,SAASC,EAAQC,GAAsB,IAArB,SAAEC,EAAQ,KAAEC,GAAMF,EACjD,MAAMG,EAAOD,EAAKE,eAClB,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAM,CAACL,SAAUA,IAChBI,EAAAA,EAAAA,IAACE,EAAAA,EAAM,MACLF,EAAAA,EAAAA,IAAA,QAAMR,KAAK,cAAcW,QAAQ,MACjCH,EAAAA,EAAAA,IAAA,QAAMR,KAAK,cAAcW,QAASL,EAAKM,YAAYC,eACnDL,EAAAA,EAAAA,IAAA,QAAMR,KAAK,WAAWW,QAASL,EAAKM,YAAYE,YAChDN,EAAAA,EAAAA,IAAA,QAAMO,IAAI,YAAYC,KAAMX,EAAKY,KAAKC,aAAaC,OACnDX,EAAAA,EAAAA,IAAA,QAAMY,SAAS,WAAWT,QAASL,EAAKM,YAAYS,SACpDb,EAAAA,EAAAA,IAAA,QAAMY,SAAS,iBAAiBT,QAASL,EAAKM,YAAYC,eAC1DL,EAAAA,EAAAA,IAAA,QAAMY,SAAS,UAAUT,QAAQ,aACjCH,EAAAA,EAAAA,IAAA,QAAMY,SAAS,SAAST,QAASN,EAAKY,KAAKC,aAAaC,OACxDX,EAAAA,EAAAA,IAAA,QAAMR,KAAK,eAAeW,QAAQ,yBAClCH,EAAAA,EAAAA,IAAA,QAAMR,KAAK,gBAAgBW,QAASL,EAAKM,YAAYS,SACrDb,EAAAA,EAAAA,IAAA,QAAMR,KAAK,sBAAsBW,QAASL,EAAKM,YAAYC,eAC3DL,EAAAA,EAAAA,IAAA,aAAS,GAAEH,EAAKY,KAAKC,aAAaG,WAAWf,EAAKM,YAAYS,WAEhEb,EAAAA,EAAAA,IAAA,YACEA,EAAAA,EAAAA,IAAA,UAAKF,EAAKM,YAAYS,QACtBb,EAAAA,EAAAA,IAAA,OAAKc,IAAKvB,EAAiBwB,wBAAyB,CAAEC,OAAQlB,EAAKmB,SAI3E,C","sources":["webpack://cdroma.me/./src/templates/blog-post.jsx"],"sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { css } from '@emotion/react';\nimport { Helmet } from 'react-helmet';\nimport Layout from '../components/layout';\n\nconst styledContainer = css`\n  margin-bottom: 1rem;\n`;\n\nexport default function BlogPost({ location, data }) {\n  const post = data.markdownRemark;\n  return (\n    <Layout location={location}>\n      <Helmet>\n        <meta name=\"theme-color\" content=\"\" />\n        <meta name=\"description\" content={post.frontmatter.description} />\n        <meta name=\"keywords\" content={post.frontmatter.keywords} />\n        <link rel=\"canonical\" href={data.site.siteMetadata.url} />\n        <meta property=\"og:title\" content={post.frontmatter.title} />\n        <meta property=\"og:description\" content={post.frontmatter.description} />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:url\" content={data.site.siteMetadata.url} />\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={post.frontmatter.title} />\n        <meta name=\"twitter:description\" content={post.frontmatter.description} />\n        <title>{`${data.site.siteMetadata.title} - ${post.frontmatter.title}`}</title>\n      </Helmet>\n      <div>\n        <h1>{post.frontmatter.title}</h1>\n        <div css={styledContainer} dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        url\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        description\n        keywords\n      }\n    }\n  }\n`;\n\nBlogPost.propTypes = {\n  data: PropTypes.shape({\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        url: PropTypes.string.isRequired,\n      }),\n    }),\n    markdownRemark: PropTypes.shape({\n      html: PropTypes.string.isRequired,\n      frontmatter: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n        keywords: PropTypes.string.isRequired,\n      }).isRequired,\n    }).isRequired,\n  }).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n    search: PropTypes.string.isRequired,\n    hash: PropTypes.string.isRequired,\n    href: PropTypes.string.isRequired,\n    origin: PropTypes.string.isRequired,\n    protocol: PropTypes.string.isRequired,\n    host: PropTypes.string.isRequired,\n    hostname: PropTypes.string.isRequired,\n    port: PropTypes.string.isRequired,\n    state: PropTypes.shape({\n      key: PropTypes.string.isRequired,\n    }),\n    key: PropTypes.string.isRequired,\n    action: PropTypes.string,\n  }).isRequired,\n};\n"],"names":["styledContainer","name","styles","BlogPost","_ref","location","data","post","markdownRemark","___EmotionJSX","Layout","Helmet","content","frontmatter","description","keywords","rel","href","site","siteMetadata","url","property","title","css","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}